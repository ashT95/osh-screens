{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ash\\\\osh-screens\\\\src\\\\components\\\\customButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport reactDom from 'react-dom'; //import {Button} from 'bootstrap/dist/css/bootstrap.css';\n\nimport './background.css';\nimport cont from './assets/bg-content.png';\nimport CustomModal from './customModal';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nexport default function CustomButton(props) {\n  _s();\n\n  const {\n    id,\n    img,\n    active,\n    setActive,\n    content\n  } = props;\n  const [alreadyClicked, setAlreadyClicked] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  function handleClick() {\n    //setAlreadyClicked(true);\n    setActive(id);\n  }\n\n  function cancelClick() {\n    setAlreadyClicked(true);\n    setActive(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onMouseEnter: (handleClick, toggleModal),\n    onMouseLeave: (cancelClick, toggleModal),\n    id: id,\n    className: active ? \"active\" : alreadyClicked ? \"alreadyClicked\" : \"notClicked\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onRequestClose: toggleModal,\n      contentLabel: \"MyDialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomButton, \"WZbh8H465zj7/DKSa/eNIb3IBk4=\");\n\n_c = CustomButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"sources":["C:/Users/ash/osh-screens/src/components/customButton.jsx"],"names":["React","Component","useState","reactDom","cont","CustomModal","Modal","setAppElement","CustomButton","props","id","img","active","setActive","content","alreadyClicked","setAlreadyClicked","isOpen","setIsOpen","toggleModal","handleClick","cancelClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAO,kBAAP;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAGAA,KAAK,CAACC,aAAN,CAAoB,OAApB;AAGA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AACvC,QAAK;AAACC,IAAAA,EAAD;AAAIC,IAAAA,GAAJ;AAAQC,IAAAA,MAAR;AAAeC,IAAAA,SAAf;AAAyBC,IAAAA;AAAzB,MAAoCL,KAAzC;AACA,QAAK,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,KAAD,CAAnD;AAGA,QAAK,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,KAAD,CAAnC;;AAEA,WAASiB,WAAT,GAAsB;AAClBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH;;AAGD,WAASG,WAAT,GAAsB;AAClB;AACAP,IAAAA,SAAS,CAACH,EAAD,CAAT;AAGH;;AAED,WAASW,WAAT,GAAsB;AAClBL,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAH,IAAAA,SAAS,CAACH,EAAD,CAAT;AAEH;;AAGD,sBACI;AAAQ,IAAA,YAAY,GAAGU,WAAW,EAAED,WAAhB,CAApB;AAAiD,IAAA,YAAY,GAAEE,WAAW,EAAEF,WAAf,CAA7D;AAAyF,IAAA,EAAE,EAAIT,EAA/F;AACA,IAAA,SAAS,EAAGE,MAAM,GAAG,QAAH,GAAcG,cAAc,GAAG,gBAAH,GAAsB,YADpE;AAAA,4BAIG;AAAK,MAAA,GAAG,EAAIJ,GAAZ;AAAiB,MAAA,GAAG,EAAED;AAAtB;AAAA;AAAA;AAAA;AAAA,YAJH,eAMG,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEO,MAAf;AACC,MAAA,cAAc,EAAEE,WADjB;AAEC,MAAA,YAAY,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,YANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA5CuBX,Y;;KAAAA,Y","sourcesContent":["import React, { Component , useState } from 'react';\r\nimport reactDom from 'react-dom';\r\n//import {Button} from 'bootstrap/dist/css/bootstrap.css';\r\nimport './background.css';\r\nimport cont from './assets/bg-content.png';\r\nimport CustomModal from './customModal';\r\nimport Modal from 'react-modal';\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\n \r\nexport default function CustomButton(props){\r\n    const{id,img,active,setActive,content} = props;\r\n    const[alreadyClicked, setAlreadyClicked] = useState(false);\r\n\r\n  \r\n    const[isOpen, setIsOpen] = useState(false);\r\n\r\n    function toggleModal(){\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n\r\n    function handleClick(){\r\n        //setAlreadyClicked(true);\r\n        setActive(id); \r\n\r\n\r\n    }\r\n\r\n    function cancelClick(){\r\n        setAlreadyClicked(true);\r\n        setActive(id);\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <button onMouseEnter ={handleClick, toggleModal} onMouseLeave={cancelClick, toggleModal} id = {id} \r\n        className={ active ? \"active\" : alreadyClicked ? \"alreadyClicked\" : \"notClicked\"}\r\n         >\r\n\r\n           <img src = {img} alt={id} />\r\n\r\n           <Modal isOpen={isOpen}\r\n            onRequestClose={toggleModal}\r\n            contentLabel=\"MyDialog\"\r\n           >\r\n\r\n           </Modal>\r\n\r\n\r\n\r\n        </button>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}