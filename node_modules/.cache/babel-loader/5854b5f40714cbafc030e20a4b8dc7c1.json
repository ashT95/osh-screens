{"ast":null,"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar style = {\n  container: {\n    position: 'relative'\n  },\n  mainImage: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n    backgroundRepeat: 'no-repeat'\n  },\n  overlayImage: {\n    position: 'absolute',\n    objectFit: 'cover',\n    backgroundRepeat: 'no-repeat'\n  }\n};\n\nvar Overlay = function (_Component) {\n  inherits(Overlay, _Component);\n\n  function Overlay() {\n    classCallCheck(this, Overlay);\n\n    var _this = possibleConstructorReturn(this, (Overlay.__proto__ || Object.getPrototypeOf(Overlay)).call(this));\n\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  createClass(Overlay, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _props = this.props,\n          url = _props.url,\n          overlayUrl = _props.overlayUrl,\n          watermark = _props.watermark;\n\n      if (watermark) {\n        var context = this.canvasRef;\n        var img = new Image();\n        var overlay = new Image();\n        img.src = url;\n\n        img.onload = function () {\n          overlay.src = overlayUrl;\n\n          overlay.onload = function () {\n            context.drawImage(img, 0, 0);\n            context.drawImage.apply(context, toConsumableArray(_this2.overlayCanvas(overlay)));\n          };\n        };\n      }\n    }\n  }, {\n    key: 'overlayCanvas',\n    value: function overlayCanvas(overlay) {\n      var _props2 = this.props,\n          position = _props2.position,\n          overlayHeight = _props2.overlayHeight,\n          imageHeight = _props2.imageHeight,\n          imageWidth = _props2.imageWidth,\n          overlayWidth = _props2.overlayWidth,\n          overlayPadding = _props2.overlayPadding;\n\n      switch (position) {\n        case 'topLeft':\n          return [overlay, overlayPadding, overlayPadding];\n\n        case 'topRight':\n          return [overlay, imageWidth - overlayWidth - overlayPadding, overlayPadding];\n\n        case 'bottomLeft':\n          return [overlay, overlayPadding, imageHeight - overlayHeight - overlayPadding];\n\n        case 'center':\n          return [overlay, Math.floor(imageWidth / 2 - overlayWidth / 2), Math.floor(imageHeight / 2 - overlayHeight / 2)];\n\n        default:\n          return [overlay, imageHeight - overlayHeight - overlayPadding, imageWidth - overlayWidth - overlayPadding];\n      }\n    }\n  }, {\n    key: 'overlayPosition',\n    value: function overlayPosition() {\n      var _props3 = this.props,\n          position = _props3.position,\n          overlayPadding = _props3.overlayPadding;\n\n      switch (position) {\n        case 'topLeft':\n          return {\n            top: overlayPadding,\n            left: overlayPadding\n          };\n\n        case 'topRight':\n          return {\n            top: overlayPadding,\n            right: overlayPadding\n          };\n\n        case 'bottomLeft':\n          return {\n            bottom: overlayPadding,\n            left: overlayPadding\n          };\n\n        case 'center':\n          return {\n            right: 0,\n            left: 0,\n            top: 0,\n            bottom: 0,\n            margin: 'auto auto'\n          };\n\n        default:\n          return {\n            bottom: overlayPadding,\n            right: overlayPadding\n          };\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var container = style.container,\n          mainImage = style.mainImage,\n          overlayImage = style.overlayImage;\n      var _props4 = this.props,\n          url = _props4.url,\n          imageHeight = _props4.imageHeight,\n          imageWidth = _props4.imageWidth,\n          overlayHeight = _props4.overlayHeight,\n          overlayWidth = _props4.overlayWidth,\n          position = _props4.position,\n          overlayUrl = _props4.overlayUrl,\n          watermark = _props4.watermark;\n\n      if (watermark) {\n        return React.createElement('canvas', {\n          ref: function ref(c) {\n            return _this3.canvasRef = c.getContext('2d');\n          },\n          height: imageHeight,\n          width: imageWidth\n        });\n      }\n\n      return React.createElement('div', {\n        style: _extends({}, container, {\n          height: imageHeight,\n          width: imageWidth\n        })\n      }, React.createElement('img', {\n        src: url,\n        alt: 'main',\n        style: _extends({}, mainImage, {\n          backgroundImage: 'url(\"' + url + '\")'\n        })\n      }), React.createElement('img', {\n        src: overlayUrl,\n        alt: 'overlay',\n        style: _extends({}, overlayImage, {\n          height: overlayHeight,\n          width: overlayWidth\n        }, this.overlayPosition(position))\n      }));\n    }\n  }]);\n  return Overlay;\n}(Component);\n\nOverlay.propTypes = {\n  url: PropTypes.string.isRequired,\n  overlayUrl: PropTypes.string.isRequired,\n  imageHeight: PropTypes.number,\n  imageWidth: PropTypes.number,\n  overlayHeight: PropTypes.number,\n  overlayWidth: PropTypes.number,\n  position: PropTypes.string,\n  watermark: PropTypes.bool,\n  overlayPadding: PropTypes.number\n};\nOverlay.defaultProps = {\n  imageHeight: 250,\n  imageWidth: 250,\n  overlayHeight: 30,\n  overlayWidth: 30,\n  position: null,\n  watermark: true,\n  overlayPadding: 10\n};\nexport default Overlay;","map":{"version":3,"sources":["../src/index.js"],"names":["style","Overlay","Component","propTypes","PropTypes","number","defaultProps","React","url","overlayUrl","watermark","context","img","overlay","position","overlayHeight","imageHeight","imageWidth","overlayWidth","overlayPadding","Math","container","mainImage","overlayImage","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n  container: {\n    position: 'relative',\n  },\n  mainImage: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n    backgroundRepeat: 'no-repeat',\n  },\n  overlayImage: {\n    position: 'absolute',\n    objectFit: 'cover',\n    backgroundRepeat: 'no-repeat',\n  },\n};\n\nclass Overlay extends Component {\n  static propTypes = {\n    url: PropTypes.string.isRequired,\n    overlayUrl: PropTypes.string.isRequired,\n    imageHeight: PropTypes.number,\n    imageWidth: PropTypes.number,\n    overlayHeight: PropTypes.number,\n    overlayWidth: PropTypes.number,\n    position: PropTypes.string,\n    watermark: PropTypes.bool,\n    overlayPadding: PropTypes.number,\n  }\n\n  static defaultProps = {\n    imageHeight: 250,\n    imageWidth: 250,\n    overlayHeight: 30,\n    overlayWidth: 30,\n    position: null,\n    watermark: true,\n    overlayPadding: 10,\n  }\n\n  constructor() {\n    super();\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      url,\n      overlayUrl,\n      watermark,\n    } = this.props;\n    if (watermark) {\n      const context = this.canvasRef;\n\n      const img = new Image();\n      const overlay = new Image();\n      img.src = url;\n      \n\n      img.onload = () => {\n        overlay.src = overlayUrl;\n        overlay.onload = () => {\n          context.drawImage(img, 0, 0);\n          context.drawImage(...this.overlayCanvas(overlay));\n        };\n      };\n    }\n  }\n\n  overlayCanvas(overlay) {\n    const {\n      position,\n      overlayHeight,\n      imageHeight,\n      imageWidth,\n      overlayWidth,\n      overlayPadding,\n    } = this.props;\n    switch (position) {\n      case 'topLeft':\n        return [overlay, overlayPadding, overlayPadding];\n      case 'topRight':\n        return [overlay, (imageWidth - overlayWidth) - overlayPadding, overlayPadding];\n      case 'bottomLeft':\n        return [overlay, overlayPadding, (imageHeight - overlayHeight) - overlayPadding];\n      case 'center':\n        return [\n          overlay,\n          Math.floor(imageWidth / 2 - overlayWidth / 2),\n          Math.floor(imageHeight / 2 - overlayHeight / 2),\n        ];\n      default:\n        return [\n          overlay,\n          (imageHeight - overlayHeight) - overlayPadding,\n          (imageWidth - overlayWidth) - overlayPadding,\n        ];\n    }\n  }\n\n  overlayPosition() {\n    const { position, overlayPadding } = this.props;\n    switch (position) {\n      case 'topLeft':\n        return {\n          top: overlayPadding,\n          left: overlayPadding,\n        };\n      case 'topRight':\n        return {\n          top: overlayPadding,\n          right: overlayPadding,\n        };\n      case 'bottomLeft':\n        return {\n          bottom: overlayPadding,\n          left: overlayPadding,\n        };\n      case 'center':\n        return {\n          right: 0,\n          left: 0,\n          top: 0,\n          bottom: 0,\n          margin: 'auto auto',\n        };\n      default:\n        return {\n          bottom: overlayPadding,\n          right: overlayPadding,\n        };\n    }\n  }\n\n  render() {\n    const {\n      container,\n      mainImage,\n      overlayImage,\n    } = style;\n    const {\n      url,\n      imageHeight,\n      imageWidth,\n      overlayHeight,\n      overlayWidth,\n      position,\n      overlayUrl,\n      watermark,\n    } = this.props;\n\n    if (watermark) {\n      return (\n        <canvas\n          ref={c => this.canvasRef = c.getContext('2d')}\n          height={imageHeight}\n          width={imageWidth}\n        />\n      );\n    }\n\n    return (\n      <div\n        style={{\n          ...container,\n          height: imageHeight,\n          width: imageWidth,\n        }}\n      >\n        <img\n          src={url}\n          alt=\"main\"\n          style={{\n            ...mainImage,\n            backgroundImage: `url(\"${url}\")`,\n          }}\n        />\n        <img\n          src={overlayUrl}\n          alt=\"overlay\"\n          style={{\n            ...overlayImage,\n            height: overlayHeight,\n            width: overlayWidth,\n            ...this.overlayPosition(position),\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Overlay;\n"]},"metadata":{},"sourceType":"module"}