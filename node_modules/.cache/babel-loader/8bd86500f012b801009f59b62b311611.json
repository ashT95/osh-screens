{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ash\\\\osh-screens\\\\src\\\\components\\\\customButton.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport reactDom from \"react-dom\"; //import {Button} from 'bootstrap/dist/css/bootstrap.css';\n\nimport \"./background.css\";\nimport cont from \"./assets/bg-content.png\";\nimport CustomModal from \"./customModal\";\nimport Modal from \"react-modal\";\nimport IconDotLine from \"./assets/icon-dot-line.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst modals = [{\n  img: IconDotLine\n}];\nexport default function CustomButton(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    id,\n    img,\n    active,\n    setActive\n  } = props;\n  const [alreadyClicked, setAlreadyClicked] = useState(false);\n\n  function modalContent(props) {\n    _s();\n\n    const {\n      id,\n      img\n    } = props;\n    const [isOpen, setIsOpen] = useState(false);\n    {\n      modals.map(modal => /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        onRequestClose: toggleModal,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: modal.img,\n          alt: modal.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this));\n    }\n  }\n\n  _s(modalContent, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  function handleClick() {\n    //setAlreadyClicked(true);\n    setActive(id);\n  }\n\n  function cancelClick() {\n    setAlreadyClicked(true);\n    setActive(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: (handleClick, toggleModal),\n      onMouseLeave: (cancelClick, toggleModal),\n      id: id,\n      className: active ? \"active\" : alreadyClicked ? \"alreadyClicked\" : \"notClicked\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CustomButton, \"m7+rPQXU5o0UbR5s5KZtGhc8iXw=\");\n\n_c = CustomButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"sources":["C:/Users/ash/osh-screens/src/components/customButton.jsx"],"names":["React","Component","useState","reactDom","cont","CustomModal","Modal","IconDotLine","setAppElement","modals","img","CustomButton","props","id","active","setActive","alreadyClicked","setAlreadyClicked","modalContent","isOpen","setIsOpen","map","modal","toggleModal","handleClick","cancelClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAO,kBAAP;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEAD,KAAK,CAACE,aAAN,CAAoB,OAApB;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,GAAG,EAAEH;AAAP,CAAD,CAAf;AAEA,eAAe,SAASI,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAAA;;AAC1C,QAAM;AAAEC,IAAAA,EAAF;AAAMH,IAAAA,GAAN;AAAWI,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,MAAiCH,KAAvC;AACA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,KAAD,CAApD;;AAEA,WAASgB,YAAT,CAAsBN,KAAtB,EAA4B;AAAA;;AAC1B,UAAM;AAACC,MAAAA,EAAD;AAAKH,MAAAA;AAAL,QAAYE,KAAlB;AACA,UAAM,CAACO,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,KAAD,CAApC;AAEA;AAACO,MAAAA,MAAM,CAACY,GAAP,CAAYC,KAAD,iBACV,QAAC,KAAD;AAAO,QAAA,MAAM,EAAIH,MAAjB;AAAyB,QAAA,cAAc,EAAEI,WAAzC;AAAA,+BACA;AAAK,UAAA,GAAG,EAAID,KAAK,CAACZ,GAAlB;AAAuB,UAAA,GAAG,EAAEY,KAAK,CAACT;AAAlC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADD;AAIE;AAEJ;;AAdyC,KAIjCK,YAJiC;;AAgB1C,WAASK,WAAT,GAAsB;AACpBH,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD;;AAED,WAASK,WAAT,GAAuB;AACrB;AACAT,IAAAA,SAAS,CAACF,EAAD,CAAT;AACD;;AAED,WAASY,WAAT,GAAuB;AACrBR,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,IAAAA,SAAS,CAACF,EAAD,CAAT;AACD;;AAED,sBACE;AAAA,2BACE;AACE,MAAA,OAAO,GAAEW,WAAW,EAAED,WAAf,CADT;AAEE,MAAA,YAAY,GAAEE,WAAW,EAAEF,WAAf,CAFd;AAGE,MAAA,EAAE,EAAEV,EAHN;AAIE,MAAA,SAAS,EACPC,MAAM,GAAG,QAAH,GAAcE,cAAc,GAAG,gBAAH,GAAsB,YAL5D;AAAA,6BAQE;AAAK,QAAA,GAAG,EAAEN,GAAV;AAAe,QAAA,GAAG,EAAEG;AAApB;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;IA7CuBF,Y;;KAAAA,Y","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport reactDom from \"react-dom\";\r\n//import {Button} from 'bootstrap/dist/css/bootstrap.css';\r\nimport \"./background.css\";\r\nimport cont from \"./assets/bg-content.png\";\r\nimport CustomModal from \"./customModal\";\r\nimport Modal from \"react-modal\";\r\nimport IconDotLine from \"./assets/icon-dot-line.png\";\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst modals = [{ img: IconDotLine }];\r\n\r\nexport default function CustomButton(props) {\r\n  const { id, img, active, setActive } = props;\r\n  const [alreadyClicked, setAlreadyClicked] = useState(false);\r\n\r\n  function modalContent(props){\r\n    const {id, img} = props;\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    {modals.map((modal) => (\r\n      <Modal isOpen = {isOpen} onRequestClose={toggleModal}>\r\n      <img src = {modal.img} alt={modal.id} />\r\n    </Modal>\r\n    ))}\r\n\r\n  }\r\n\r\n  function toggleModal(){\r\n    setIsOpen(!isOpen);\r\n  } \r\n\r\n  function handleClick() {\r\n    //setAlreadyClicked(true);\r\n    setActive(id);\r\n  }\r\n\r\n  function cancelClick() {\r\n    setAlreadyClicked(true);\r\n    setActive(id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={handleClick, toggleModal}\r\n        onMouseLeave={cancelClick, toggleModal}\r\n        id={id}\r\n        className={\r\n          active ? \"active\" : alreadyClicked ? \"alreadyClicked\" : \"notClicked\"\r\n        }\r\n      >\r\n        <img src={img} alt={id} />\r\n\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}