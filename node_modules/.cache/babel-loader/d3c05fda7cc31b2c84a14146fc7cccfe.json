{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ash\\\\osh-screens\\\\src\\\\components\\\\customModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport reactDom from 'react-dom';\nimport cont from './assets/bg-content.png';\nimport Modal from 'react-modal';\nimport ReactModal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nexport default function CustomModal(props) {\n  _s();\n\n  const {\n    id,\n    img,\n    open,\n    setOpen\n  } = props;\n  const [alreadyOpened, setAlreadyOpened] = useState(false);\n\n  function toggleModal() {\n    setOpen(!open);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mod\",\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: open,\n      onRequestClose: toggleModal,\n      id: id,\n      className: open ? \"open\" : alreadyOpened ? \"alreadyOpened\" : \"notOpened\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomModal, \"5BrXXk7pp5PhpuLcqhLFNSzcI0s=\");\n\n_c = CustomModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomModal\");","map":{"version":3,"sources":["C:/Users/ash/osh-screens/src/components/customModal.jsx"],"names":["React","useState","reactDom","cont","Modal","ReactModal","setAppElement","CustomModal","props","id","img","open","setOpen","alreadyOpened","setAlreadyOpened","toggleModal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AAEAD,KAAK,CAACE,aAAN,CAAoB,OAApB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACvC,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,GAAN;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAA4BJ,KAAlC;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,KAAD,CAAlD;;AAEA,WAASc,WAAT,GAAuB;AACnBH,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAG,KAAjB;AAAA,2BACA,QAAC,KAAD;AACA,MAAA,MAAM,EAAIA,IADV;AAEA,MAAA,cAAc,EAAII,WAFlB;AAGA,MAAA,EAAE,EAAIN,EAHN;AAIA,MAAA,SAAS,EAAIE,IAAI,GAAG,MAAH,GAAYE,aAAa,GAAG,eAAH,GAAqB,WAJ/D;AAAA,6BAKI;AAAK,QAAA,GAAG,EAAIH,GAAZ;AAAiB,QAAA,GAAG,EAAID;AAAxB;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GApBuBF,W;;KAAAA,W","sourcesContent":["import React, { useState } from 'react';\r\nimport reactDom from 'react-dom';\r\nimport cont from './assets/bg-content.png';\r\nimport Modal from 'react-modal';\r\nimport ReactModal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport default function CustomModal(props) {\r\n    const { id, img, open, setOpen} = props;\r\n    const [alreadyOpened, setAlreadyOpened] = useState(false);\r\n  \r\n    function toggleModal() {\r\n        setOpen(!open)\r\n    }\r\n  \r\n    return (\r\n        <div className = \"mod\">\r\n        <Modal \r\n        isOpen = {open}\r\n        onRequestClose = {toggleModal}\r\n        id = {id} \r\n        className = {open ? \"open\" : alreadyOpened ? \"alreadyOpened\" : \"notOpened\"} >\r\n            <img src = {img} alt = {id} />\r\n        </Modal>   \r\n    \r\n</div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}