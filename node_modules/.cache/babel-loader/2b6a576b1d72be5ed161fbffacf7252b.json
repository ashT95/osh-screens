{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\n\nconst useTimer = startTime => {\n  _s();\n\n  const [timer, setTimer] = useState(startTime);\n  useEffect(() => {\n    const myInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      }\n    }, 1000);\n\n    const resetTimeout = () => {\n      setTimer(startTime);\n    };\n\n    const events = [\"click\"];\n\n    for (let i in events) {\n      window.addEventListener(events[i], resetTimeout);\n    }\n\n    return () => {\n      clearInterval(myInterval);\n\n      for (let i in events) {\n        window.removeEventListener(events[i], resetTimeout);\n      }\n    };\n  });\n  return timer;\n};\n\n_s(useTimer, \"ensuIX0vfXNedTU5Lc+XPJBYpS4=\");\n\nexport default useTimer;","map":{"version":3,"sources":["C:/Users/ash/osh-screens/src/components/useTimer.js"],"names":["React","useEffect","useState","useTimer","startTime","timer","setTimer","myInterval","setInterval","resetTimeout","events","i","window","addEventListener","clearInterval","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAIA,MAAMC,QAAQ,GAAIC,SAAD,IAAe;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,SAAD,CAAlC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,UAAU,GAAGC,WAAW,CAAC,MAAM;AACnC,UAAIH,KAAK,GAAG,CAAZ,EAAe;AACbC,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;AACF,KAJ6B,EAI3B,IAJ2B,CAA9B;;AAKA,UAAMI,YAAY,GAAG,MAAM;AACzBH,MAAAA,QAAQ,CAACF,SAAD,CAAR;AACD,KAFD;;AAGA,UAAMM,MAAM,GAAG,CACb,OADa,CAAf;;AAGA,SAAK,IAAIC,CAAT,IAAcD,MAAd,EAAsB;AACpBE,MAAAA,MAAM,CAACC,gBAAP,CAAwBH,MAAM,CAACC,CAAD,CAA9B,EAAmCF,YAAnC;AACD;;AACD,WAAO,MAAM;AACXK,MAAAA,aAAa,CAACP,UAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcD,MAAd,EAAsB;AACpBE,QAAAA,MAAM,CAACG,mBAAP,CAA2BL,MAAM,CAACC,CAAD,CAAjC,EAAsCF,YAAtC;AACD;AACF,KALD;AAMD,GArBQ,CAAT;AAsBA,SAAOJ,KAAP;AACD,CAzBD;;GAAMF,Q;;AA2BN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nconst useTimer = (startTime) => {\r\n  const [timer, setTimer] = useState(startTime);\r\n  useEffect(() => {\r\n    const myInterval = setInterval(() => {\r\n      if (timer > 0) {\r\n        setTimer(timer - 1);\r\n      }\r\n    }, 1000);\r\n    const resetTimeout = () => {\r\n      setTimer(startTime);\r\n    };\r\n    const events = [\r\n      \"click\",\r\n    ];\r\n    for (let i in events) {\r\n      window.addEventListener(events[i], resetTimeout);\r\n    }\r\n    return () => {\r\n      clearInterval(myInterval);\r\n      for (let i in events) {\r\n        window.removeEventListener(events[i], resetTimeout);\r\n      }\r\n    };\r\n  });\r\n  return timer;\r\n};\r\n\r\nexport default useTimer;"]},"metadata":{},"sourceType":"module"}