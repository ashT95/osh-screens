{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ash\\\\osh-screens\\\\src\\\\components\\\\customButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport reactDom from 'react-dom'; //import {Button} from 'bootstrap/dist/css/bootstrap.css';\n\nimport './background.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomButton(props) {\n  _s();\n\n  const {\n    id,\n    img,\n    active,\n    setActive\n  } = props;\n  const [alreadyClicked, setAlreadyClicked] = useState(false);\n  const [doubleClicked, setDoubleClicked] = useState(false);\n\n  function handleClick() {\n    setAlreadyClicked(true);\n    setActive(id);\n    setDoubleClicked(false);\n  }\n\n  function cancelClick() {\n    setAlreadyClicked(false);\n    setActive(id);\n    setDoubleClicked(false);\n  }\n\n  function doubleClick() {\n    setActive(id);\n    setDoubleClicked(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onMouseEnter: handleClick,\n    onMouseLeave: cancelClick,\n    onDoubleClick: doubleClick,\n    id: id,\n    className: active ? \"active\" : alreadyClicked ? \"alreadyClicked\" : doubleClicked ? \"doubleClicked\" : \"notClicked\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomButton, \"JhOqUR7JfP+Aiom/jE9y7y+iVtM=\");\n\n_c = CustomButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"sources":["C:/Users/ash/osh-screens/src/components/customButton.jsx"],"names":["React","Component","useState","reactDom","CustomButton","props","id","img","active","setActive","alreadyClicked","setAlreadyClicked","doubleClicked","setDoubleClicked","handleClick","cancelClick","doubleClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAO,kBAAP;;AAGA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AACvC,QAAK;AAACC,IAAAA,EAAD;AAAIC,IAAAA,GAAJ;AAAQC,IAAAA,MAAR;AAAeC,IAAAA;AAAf,MAA4BJ,KAAjC;AACA,QAAK,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAK,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAjD;;AAGA,WAASY,WAAT,GAAsB;AAClBH,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,IAAAA,SAAS,CAACH,EAAD,CAAT;AACAO,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH;;AAED,WAASE,WAAT,GAAsB;AAClBJ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAF,IAAAA,SAAS,CAACH,EAAD,CAAT;AACAO,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH;;AAED,WAASG,WAAT,GAAsB;AAClBP,IAAAA,SAAS,CAACH,EAAD,CAAT;AACAO,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;;AAGD,sBACI;AAAQ,IAAA,YAAY,EAAGC,WAAvB;AAAoC,IAAA,YAAY,EAAEC,WAAlD;AAA+D,IAAA,aAAa,EAAEC,WAA9E;AAA2F,IAAA,EAAE,EAAIV,EAAjG;AAAqG,IAAA,SAAS,EAAEE,MAAM,GAAG,QAAH,GAAaE,cAAc,GAAG,gBAAH,GACjJE,aAAa,GAAG,eAAH,GAAqB,YADlC;AAAA,2BAEI;AAAK,MAAA,GAAG,EAAIL,GAAZ;AAAiB,MAAA,GAAG,EAAED;AAAtB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA/BuBF,Y;;KAAAA,Y","sourcesContent":["import React, { Component , useState } from 'react';\r\nimport reactDom from 'react-dom';\r\n//import {Button} from 'bootstrap/dist/css/bootstrap.css';\r\nimport './background.css';\r\n\r\n\r\nexport default function CustomButton(props){\r\n    const{id,img,active,setActive} = props;\r\n    const[alreadyClicked, setAlreadyClicked] = useState(false);\r\n    const[doubleClicked, setDoubleClicked] = useState(false);\r\n\r\n\r\n    function handleClick(){\r\n        setAlreadyClicked(true);\r\n        setActive(id);\r\n        setDoubleClicked(false);\r\n    }\r\n\r\n    function cancelClick(){\r\n        setAlreadyClicked(false);\r\n        setActive(id);\r\n        setDoubleClicked(false);\r\n    }\r\n\r\n    function doubleClick(){\r\n        setActive(id);\r\n        setDoubleClicked(true);\r\n    }\r\n\r\n\r\n    return(\r\n        <button onMouseEnter ={handleClick} onMouseLeave={cancelClick} onDoubleClick={doubleClick} id = {id} className={active ? \"active\": alreadyClicked ? \"alreadyClicked\" : \r\n        doubleClicked ? \"doubleClicked\" : \"notClicked\"} >\r\n            <img src = {img} alt={id} />\r\n      \r\n        </button>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}