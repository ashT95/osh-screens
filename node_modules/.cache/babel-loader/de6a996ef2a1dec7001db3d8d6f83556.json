{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ash\\\\osh-screens\\\\src\\\\components\\\\customButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport reactDom from \"react-dom\"; //import {Button} from 'bootstrap/dist/css/bootstrap.css';\n\nimport \"./background.css\";\nimport cont from \"./assets/bg-content.png\";\nimport CustomModal from \"./customModal\";\nimport Modal from \"react-modal\";\nimport IconDotLine from './assets/icon-dot-line.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modals = [{\n  img: IconDotLine,\n  text: \"hello\",\n  id: \"01\"\n}, {\n  img: cont,\n  id: \"02\"\n}];\nexport default function CustomButton(props) {\n  _s();\n\n  const {\n    id,\n    img,\n    active,\n    setActive\n  } = props;\n  const [alreadyClicked, setAlreadyClicked] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  function handleClick() {\n    //setAlreadyClicked(true);\n    setActive(id);\n    setIsOpen(true);\n  }\n\n  function cancelClick() {\n    setAlreadyClicked(true);\n    setActive(id);\n    setIsOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      onMouseLeave: cancelClick,\n      id: id,\n      className: active ? \"active\" : alreadyClicked ? \"alreadyClicked\" : \"notClicked\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-div\",\n        children: modals.map(modal => /*#__PURE__*/_jsxDEV(CustomModal, {\n          isOpen: isOpen,\n          id: modal.id,\n          img: modal.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomButton, \"WZbh8H465zj7/DKSa/eNIb3IBk4=\");\n\n_c = CustomButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"sources":["C:/Users/ash/osh-screens/src/components/customButton.jsx"],"names":["React","Component","useState","reactDom","cont","CustomModal","Modal","IconDotLine","modals","img","text","id","CustomButton","props","active","setActive","alreadyClicked","setAlreadyClicked","isOpen","setIsOpen","handleClick","cancelClick","map","modal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAO,kBAAP;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAGA,MAAMC,MAAM,GAAG,CACb;AAACC,EAAAA,GAAG,EAAGF,WAAP;AAAqBG,EAAAA,IAAI,EAAG,OAA5B;AAAqCC,EAAAA,EAAE,EAAC;AAAxC,CADa,EAEb;AAACF,EAAAA,GAAG,EAAGL,IAAP;AAAaO,EAAAA,EAAE,EAAC;AAAhB,CAFa,CAAf;AAKA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC1C,QAAM;AAAEF,IAAAA,EAAF;AAAMF,IAAAA,GAAN;AAAWK,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,MAAgCF,KAAtC;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,KAAD,CAApC;;AAGA,WAASkB,WAAT,GAAuB;AACrB;AACAL,IAAAA,SAAS,CAACJ,EAAD,CAAT;AACAQ,IAAAA,SAAS,CAAC,IAAD,CAAT;AAGD;;AAED,WAASE,WAAT,GAAuB;AACrBJ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,IAAAA,SAAS,CAACJ,EAAD,CAAT;AACAQ,IAAAA,SAAS,CAAC,KAAD,CAAT;AACC;;AAEH,sBACE;AAAA,2BACA;AACE,MAAA,OAAO,EAAGC,WADZ;AAEE,MAAA,YAAY,EAAGC,WAFjB;AAGE,MAAA,EAAE,EAAEV,EAHN;AAIE,MAAA,SAAS,EACPG,MAAM,GAAG,QAAH,GAAcE,cAAc,GAAG,gBAAH,GAAsB,YAL5D;AAAA,8BAQE;AAAK,QAAA,GAAG,EAAEP,GAAV;AAAe,QAAA,GAAG,EAAEE;AAApB;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACDH,MAAM,CAACc,GAAP,CAAYC,KAAD,iBACV,QAAC,WAAD;AACA,UAAA,MAAM,EAAEL,MADR;AAEA,UAAA,EAAE,EAAIK,KAAK,CAACZ,EAFZ;AAGA,UAAA,GAAG,EAAGY,KAAK,CAACd;AAHZ;AAAA;AAAA;AAAA;AAAA,gBADD;AADC;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAjDuBG,Y;;KAAAA,Y","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport reactDom from \"react-dom\";\r\n//import {Button} from 'bootstrap/dist/css/bootstrap.css';\r\nimport \"./background.css\";\r\nimport cont from \"./assets/bg-content.png\";\r\nimport CustomModal from \"./customModal\";\r\nimport Modal from \"react-modal\";\r\nimport IconDotLine from './assets/icon-dot-line.png';\r\n\r\n\r\nconst modals = [\r\n  {img : IconDotLine , text : \"hello\", id:\"01\" },\r\n  {img : cont, id:\"02\"}\r\n];\r\n\r\nexport default function CustomButton(props) {\r\n  const { id, img, active, setActive} = props;\r\n  const [alreadyClicked, setAlreadyClicked] = useState(false);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n  function handleClick() {\r\n    //setAlreadyClicked(true);\r\n    setActive(id);\r\n    setIsOpen(true);\r\n\r\n    \r\n  }\r\n\r\n  function cancelClick() {\r\n    setAlreadyClicked(true);\r\n    setActive(id);\r\n    setIsOpen(false);\r\n    }\r\n\r\n  return (\r\n    <div>\r\n    <button\r\n      onClick={(handleClick)}\r\n      onMouseLeave={(cancelClick)}\r\n      id={id}\r\n      className={\r\n        active ? \"active\" : alreadyClicked ? \"alreadyClicked\" : \"notClicked\"\r\n      }\r\n    >\r\n      <img src={img} alt={id} />\r\n      <div className=\"modal-div\" >\r\n    {modals.map((modal) => (\r\n      <CustomModal\r\n      isOpen={isOpen}\r\n      id = {modal.id}\r\n      img= {modal.img}\r\n     />\r\n\r\n    ))}\r\n    \r\n  </div>\r\n    </button>\r\n   \r\n   \r\n\r\n      </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}